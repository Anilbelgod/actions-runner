# .github/workflows/docker-build-nginx.yml

name: Docker Nginx Image CI

# Controls when the workflow will run
on:
  push:
    branches: [ "main" ] # Trigger on pushes to the main branch
    tags:
      - 'v*.*.*' # Trigger on version tags like v1.0.0
  pull_request:
    branches: [ "main" ] # Optionally, trigger on pull requests to main for testing the build

jobs:
  build-and-push-nginx:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    permissions:
      contents: read # Needed to check out the repository
      packages: write # Needed to push to GitHub Packages (if using GPR)
      # id-token: write # Needed for OIDC if you're authenticating to a cloud provider's registry

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      # with:
      #   driver-opts: image=moby/buildkit:v0.12.4 # Optional: Pin BuildKit version

    - name: Log in to Docker Hub (example)
      # Replace with your registry login if not Docker Hub
      # For GitHub Packages, use docker/login-action with ghcr.io and GITHUB_TOKEN
      if: github.event_name != 'pull_request' # Don't log in for PRs unless you intend to push
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        # registry: ghcr.io # Uncomment if using GitHub Container Registry
        # username: ${{ github.actor }} # Uncomment if using GitHub Container Registry
        # password: ${{ secrets.GITHUB_TOKEN }} # Uncomment if using GitHub Container Registry

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: | # List of image names
          yourusername/custom-nginx 
          # Or for GitHub Container Registry:
          # ghcr.io/${{ github.repository_owner }}/custom-nginx
        tags: | # Define how tags are generated
          type=schedule
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}} # For tags like v1.2.3
          type=semver,pattern={{major}}.{{minor}} # For tags like v1.2
          type=semver,pattern={{major}} # For tags like v1
          type=sha # Git SHA as a tag
          type=raw,value=latest,enable={{is_default_branch}} # Tag 'latest' on default branch (main)

    - name: Build and push Docker image
      uses: docker/build-push-action@v6
      with:
        context: . # Build context (usually the root of your repo)
        file: ./Dockerfile # Path to your Nginx Dockerfile (assuming it's named Dockerfile)
        push: ${{ github.event_name != 'pull_request' }} # Push only if not a PR (or on merge to main, tag, etc.)
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha # Enable GitHub Actions cache for Docker layers
        cache-to: type=gha,mode=max # Write to GitHub Actions cache

    # Optional: If you want to use the image in a subsequent job in the same workflow
    # you might need to output the image name and tag.
    # - name: Output image name
    #   run: echo "Image built: ${{ steps.meta.outputs.tags }}"

