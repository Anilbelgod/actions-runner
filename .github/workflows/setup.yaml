name: |-
  Dev branch workflow
  
  Build, test Docker image, deploy it to EKS `dev` environment and draft new release  
  
  ### Usage 
  
  Create in your repo  __`.github/workflows/main.yaml`__
  
  ```yaml
    name: Dev Branch
    on:
      push:
        branches: [ dev ]
    
    permissions:
      contents: write
      id-token: write
    
    jobs:
      do:
        uses: carecloud/github-actions-workflows-docker-ecr-eks-helm-argocd/.github/workflows/dev-branch.yaml@main
        with:
          organization: "$\{\{ github.event.repository.owner.login \}\}"
          repository: "$\{\{ github.event.repository.name \}\}"
          tenant: "$\{\{ inputs.tenant \}\}"
          registry: "$\{\{ inputs.ECR_REGISTRY \}\}"
        secrets:
          github-private-actions-pat: "$\{\{ secrets.PUBLIC_REPO_ACCESS_TOKEN \}\}"

  ```

on:
  workflow_call:
    inputs:
      organization:
        description: "Repository owner organization (ex. acme for repo acme/example)"
        required: false
        default: ${{ github.event.repository.owner.login }}
        type: string
      repository:
        description: "Repository name"
        required: true
        type: string
      app-name:
        description: "Application name usually repository name"
        required: true
        type: string
      tenant:
        description: "The tenant for the deployment"
        required: true
        type: string
      toolchain:
        description: "Toolchain ('helm', 'helmfile')"
        required: false
        default: "helmfile"
        type: string
      helm-file-path:
        description: "The path where lives the helmfile or helm chart."
        required: false
        default: "./deploy/helmfile.yaml"
        type: string
      helm-values-file:
        type: string
        description: Helm values file
        default: ""
        required: false
      dynamic-helm-values-json:
        type: string
        description: Dynamic Helm values in JSON #! TBD 
        default: ''
        required: false
      ar-region:
        description: "Artifact Registry region"
        required: true
        type: string
      registry:
        description: "Artifact Registry repository"
        required: true
        type: string
      run-tests:
        description: "Whether to run tests"
        required: false
        type: boolean
        default: true
      # deployment-check-retry-count: #!CD
      #   type: string
      #   description: 'Check retry count (for synchronously mode)'
      #   required: false
      # deployment-check-retry-interval: #!CD
      #   type: string
      #   description: 'Check retry interval (in seconds) (for synchronously mode)'
      #   required: false
      # deployment-check-app-id: #!CD
      #   type: string
      #   description: 'The Github App ID used for authentication when checking for deployment status'
      #   required: true
      # deployment-check-app-installation-id: #!CD
      #   type: string
      #   description: 'The Github App Instance ID used for authentication when checking for deployment status'
      #   required: true
    secrets:
      one-password-service-account-token:
        description: "The 1Password service acount token"
        required: true
      docker-token:
        description: "The Docker token for authentication to the Docker registry"
        required: true 
    #   github-private-actions-pat: #! TBD 
    #     description: "Github PAT allow to pull private repos"
    #     required: true
    #   deployment-check-app-private-key: #!CD
    #     description: 'The Github App private key used for authentication when checking for deployment status'
    #     required: true               
    # outputs:
    #   version:
    #     description: "The deployed version"
    #     value: ${{ jobs.ci.outputs.version }}
  
  
permissions:
  contents: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  # setup:
  #   runs-on: ["self-hosted"]
  # steps:
  #     - name: Convert Dynamic Helm Values JSON to YAML
  #       uses: carecloud/github-action-convert-json-to-yaml@main
  #       id: convert-dynamic-helm-values
  #       with:                                                     #! TBD
  #         json: '${{ inputs.dynamic-helm-values-json }}'
  #   outputs:
  #     dynamic-helm-values-yaml: ${{ steps.convert-dynamic-helm-values.outputs.yaml }}

  # ci: 
  #   uses: ./.github/workflows/ci.yaml
  #   with:
  #         organization: ${{ inputs.organization }}
  #         environment: dev
  #         repository: ${{ inputs.repository }}
  #         tenant: ${{ inputs.tenant }}
  #         app-name: ${{ inputs.app-name }}
  #         ar-region: ${{ inputs.ar-region }}
  #         registry: ${{ inputs.registry }}
  #         run-tests: ${{ inputs.run-tests }} 
  #   secrets:
  #         docker-token: ${{ secrets.docker-token }} 
  #       #   github-private-actions-pat: ${{ secrets.github-private-actions-pat }}
  #       #   docker-build-push-secrets: ${{ secrets.docker-build-push-secrets }}
  #       #   docker-login-medicomp: ${{ secrets.docker-login-medicomp }}
  #       #   docker-password-medicomp: ${{ secrets.docker-password-medicomp }}

  cd:
    uses: ./.github/workflows/cd.yaml   
    # needs: [ ci ]
    with:
      # version: ${{ needs.ci.outputs.version }}
      # image: ${{ needs.ci.outputs.image }}
      # image-tag: ${{ needs.ci.outputs.image-tag }}
      organization: ${{ inputs.organization }}
      repository: ${{ inputs.repository }}
      app-name: ${{ inputs.app-name }}
      # vanity-domain: ${{ inputs.vanity-domain }}
      environment: dev
      synchronously: true
      tenant: ${{ inputs.tenant }}
      toolchain: ${{ inputs.toolchain }}
      helm-file-path: ${{ inputs.helm-file-path }}
      helm-values-file: ${{ inputs.helm-values-file }}
      # dynamic-helm-values: ${{ needs.setup.outputs.dynamic-helm-values-yaml }}
      # deployment-check-retry-count: ${{ inputs.deployment-check-retry-count }}
      # deployment-check-retry-interval: ${{ inputs.deployment-check-retry-interval }}
      # deployment-check-app-id: ${{ inputs.deployment-check-app-id }}
      # deployment-check-app-installation-id: ${{ inputs.deployment-check-app-installation-id }}
    secrets: 
      one-password-service-account-token: ${{ secrets.one-password-service-account-token }}
      # deployment-check-app-private-key: ${{ secrets.deployment-check-app-private-key }}



